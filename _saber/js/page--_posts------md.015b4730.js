(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{59:function(t,n,e){"use strict";e.r(n);var i=e(0),s=function(t){var n,e,i,s,a,o,r,l,p=(n="可行方案",e=void 0,i="遇到问题",o="实现细节",r="解决问题一",l="解决问题二",(s={}).type=a="post",s.internal=e,s.contentType="markdown",s.slug="音频播放",s.content=e,s.createdAt=new Date(16142112e5),s.updatedAt=new Date(1615110016236),s.title="音频播放控制",s.date="2021-02-25",s.layout=a,s.markdownHeadings=[{text:i,slug:i,level:2},{text:n,slug:n,level:2},{text:o,slug:o,level:2},{text:r,slug:r,level:3},{text:l,slug:l,level:3},{text:"总结",slug:"总结",level:2}],s.excerpt='<p>最近做知识付费app的项目时，需要一个音频/视频播放页，视频播放直接使用官方提供的<code v-pre="">&lt;video&gt;</code>组件就可，但是在做音频播放页面时遇到了两个问题：</p>\n',s.permalink="/2021/02/25/音频播放",s.assets={},s.attributes=s,s.prevPost={title:"uniapp功能模块汇总",permalink:"/2021/01/31/uniapp功能模块汇总"},s.nextPost={title:"简易3D模型",permalink:"/2021/02/28/简易3D模型"},s),c=t.options.beforeCreate||[];t.options.beforeCreate=[function(){this.$page=p}].concat(c);["layout","transition"].forEach((function(n){var e=t.options.PageComponent;e&&(t.options[n]=e[n]),void 0===t.options[n]&&(t.options[n]=p[n])})),p.slug&&(t.options.name="page-wrapper-"+p.slug.replace(/[^0-9a-z\-]/gi,"-"))},a=Object(i.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("layout-manager",[e("h2",{attrs:{id:"遇到问题"}},[t._v("遇到问题")]),t._v(" "),e("p",[t._v("最近做知识付费app的项目时，需要一个音频/视频播放页，视频播放直接使用官方提供的"),e("code",{pre:!0},[t._v("<video>")]),t._v("组件就可，但是在做音频播放页面时遇到了两个问题：")]),t._v(" "),e("ul",[e("li",[t._v("关于音频播放的音频组件"),e("code",{pre:!0},[t._v("<audio>")]),t._v("力不从心，难以实现"),e("strong",[t._v("倍速播放")]),t._v("功能（硬伤")]),t._v(" "),e("li",[t._v("音频播放进度条")])]),t._v(" "),e("h2",{attrs:{id:"可行方案"}},[t._v("可行方案")]),t._v(" "),e("p",[t._v("针对第一个问题，可以使用"),e("code",{pre:!0},[t._v("<video>")]),t._v("组件实现，然后通过css把"),e("code",{pre:!0},[t._v("<video>")]),t._v("隐藏。")]),t._v(" "),e("p",[t._v("针对第二个问题，由于项目中引入了"),e("code",{pre:!0},[t._v("uView")]),t._v("框架，便采用了"),e("code",{pre:!0},[t._v("u-slider")]),t._v("来实现，但其中一些拖拉/点击/进度控制等效果仍需自行解决。")]),t._v(" "),e("h2",{attrs:{id:"实现细节"}},[t._v("实现细节")]),t._v(" "),e("p",[t._v("首先，贴下效果图：")]),t._v(" "),e("img",{staticStyle:{zoom:"25%"},attrs:{src:"https://ls-img-store.oss-cn-qingdao.aliyuncs.com/img/audio.png",alt:"audio"}}),t._v(" "),e("h3",{attrs:{id:"解决问题一"}},[t._v("解决问题一")]),t._v(" "),e("p",[t._v("代码如下：")]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"vue"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-vue"}},[e("code",{pre:!0,attrs:{class:"language-vue"}},[t._v("\x3c!-- template --\x3e\n<video id=\"myVideo\" :src=\"audioUrl\" :initial-time=\"initialTime\" class=\"hidden\" @timeupdate=\"timeupdate\" ref=\"video\"></video>\n\n\x3c!-- script --\x3e\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\t\n\t\t\tvideoContext: null,\t\t\t\t\t\t\t\t\t// 资源对象 在mount()中初始化\n\t\t\taudioUrl '',\t\t\t\t\t\t\t\t\t\t// 音频地址\n\t\t\tinitialTime: '',\t\t\t\t\t\t\t\t\t// 初始播放位置\n\t\t\tplaybackRateList: ['0.5', '0.8', '1.0', '1.25', '1.5'],\t// 倍速可选值\n\t\t\tplaybackRateIndex: 2,\t\t\t\t\t\t\t\t // 当前倍速Index\n\t\t\tprocessUnit2Second： 0，\t\t\t\t\t\t\t\t// 进度条滑动一个单位时音频秒数的变化 在mount()中初始化\n\n\t\t}\n\t}，\n\t\n\tmethods: {\n\t\t\n\t\t/**\n          * @@description 视频方法\n          * \n          */\n\t\t\t \n\t\t// 倍速\n        setRate: function(num) {\n\n            // 当前时间进度倍率\n            if(num === 0.5) this.interval = 2000\n            if(num === 0.8) this.interval = 1250\n            if(num === 1) this.interval = 1000\n            if(num === 1.25) this.interval = 800\n            if(num === 1.5) this.interval = 666.666667\n            this.auidoControl(false)\n\n            // 视频倍率\n            this.videoContext.playbackRate(num)\n\n        },\n        // 播放\n        play: function() {\n        \tthis.videoContext.play()\n        },\n        // 暂停\n        stop: function() {\n        \tthis.videoContext.pause()\n        },\n        // 跳转到置顶时间位置\n        seek: function(sec) {\n        \tthis.videoContext.seek(sec)\n        },\n        // 播放进度变化时触发\n        timeupdate: function(evt) {\n        \t// console.log(evt.target.currentTime)\n        },\n        \n        /**\n         * @description 功能区点击事件\n         * \t    id: 0,\n                name: '目录'\n                id: 1,\n                name: '倍速',\n                id: 2,\n                name: '定时'\n                id: 3,\n                name: '下载'\n                id: 4,\n                name: '评论'\n                * \n         */\n        funcClick: function(item, index) {\n\n\t\t   // 倍速播放\n            if(item.id === 1) {\n\n                // 样式变化 \n                if(this.playbackRateIndex === 4) this.playbackRateIndex = 0\n                else this.playbackRateIndex ++\n                this.$set(item, 'name', 'x' + String(this.playbackRateList[this.playbackRateIndex]))\n\n                // 音频进度条变化\n                this.setRate(Number(this.playbackRateList[this.playbackRateIndex]))\n                \n            }\n\n\t\t},\n\t\t\n\t},\n\t\n\tmounted() {\n\t\t\t\n\t\t\t// 获取视频对象\n\t\t\tthis.videoContext = uni.createVideoContext('myVideo')\n\t\t\t\n\t\t\t// 滑动一格进度条 当前音频秒数的变化长度\n\t\t\tthis.processUnit2Second = this.parseTime(this.audioLength) / 100\n\t\t\t\n\t\t}\n}\n\n\x3c!-- css --\x3e\n.hidden {\n    position: fixed;\n    z-index: -1;\n    width: 1rpx;\n    height: 1rpx;\n}")])])]),e("h3",{attrs:{id:"解决问题二"}},[t._v("解决问题二")]),t._v(" "),e("p",[t._v("两个需要实现的细节：")]),t._v(" "),e("ol",[e("li",[t._v("拖动进度条时，左侧的播放时间需要跟随变化，且音频从"),e("code",{pre:!0},[t._v("touchend()")]),t._v("触发时的位置开始播放，点击进度条同理。（代码见下）")]),t._v(" "),e("li",[t._v("倍速播放时，进度条同时倍速前进。（相关代码见“解决问题一”）")])]),t._v(" "),e("div",{pre:!0,attrs:{class:"saber-highlight","data-lang":"vue"}},[e("pre",{pre:!0,attrs:{class:"saber-highlight-code language-vue"}},[e("code",{pre:!0,attrs:{class:"language-vue"}},[t._v('\x3c!-- template --\x3e\n<view class="process__line" @tap="checkAudioProcess">\n    <u-slider \n              class="" \n              use-slot\n              active-color="#537AE0"\n              v-model="processValue" \n              @start="processStart"\n              @moving="processMoving"\n              @end="processEnd"\n              >\n        <view class="">\n            <view class="process__line__badge"></view>\n        </view>\n    </u-slider>\n</view>\n\n\x3c!-- script --\x3e\nexport default {\n\tdata(){\n\t\treturn {\n\t\t\t\n\t\t\tprocessMask: false,\t\t\t\t// 禁用watch中processVale监听\n\t\t\taudioNow: \'00:00\',\t\t\t\t// 当前音频播放时间\n\t\t\taudioLength: \'00:21\',\t\t\t// 音频时长\n\t\t\tprocessValue: 0,\t\t\t\t// 音频进度条当前值\n\n\t\t}\n\t}，\n\n\tmethods: {\n\t\n\t\t\t/**\n\t\t\t * @description 播放状态调整\n\t\t\t * @param {Boolean} control 兼容在播放时拖动/点击进度条的情况\n\t\t\t */\n\t\t\tauidoControl: function(control=true) {\n\t\t\t\t\n\t\t\t\tlet _this = this\n\t\t\t\tif(control) this.playing = !this.playing\n\t\t\t\telse clearInterval(this.playingInterval)\n\t\t\t\tthis.processMask = false\n\t\t\t\t\n\t\t\t\t// 视频控制\n\t\t\t\tif(this.playing) {\n\t\t\t\t\t\n\t\t\t\t\t// 如果当前音频已经播放结束 则重头播放\n\t\t\t\t\tif(this.audioNow == this.audioLength) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.audioNow = \'00:00\'\n\t\t\t\t\t\tthis.processValue = 0\n\t\t\t\t\t\t\n\t\t\t\t\t} \n\t\t\t\t\t\n\t\t\t\t\tthis.playingInterval = setInterval(() => {\n\t\t\t\t\t\t_this.audioNow = _this.parseSeconds(_this.parseTime(_this.audioNow) + 1)\n\t\t\t\t\t\tlet res = Decimal.div(_this.parseTime(_this.audioNow), _this.parseTime(_this.audioLength)).toNumber() *100\n\t\t\t\t\t\t_this.processValue = String(res).split(\'.\')[0]\n\t\t\t\t\t\t\n\t\t\t\t\t\t// 当前音频播放完毕 执行相应事件\n\t\t\t\t\t\tif(_this.processValue >= 100) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tclearInterval(_this.playingInterval)\n\t\t\t\t\t\t\tthis.playing = false\n\t\t\t\t\t\t\t// 播放下一首\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this.interval)\n\t\t\t\t\tthis.play()\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\tclearInterval(this.playingInterval)\n\t\t\t\t\tthis.stop()\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tcheckAudioProcess: function() {\n\t\t\t\tthis.processMask = true\n\t\t\t}\n\t\n\t},\n\n\twatch: {\n\t\t\t// 当点击进度条时 相应地调整音频播放进度\n\t\t\tprocessValue: function() {\n\t\t\t\t\n\t\t\t\tlet _this = this\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif(_this.processMask) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t_this.audioNow = _this.parseSeconds(_this.processValue * _this.processUnit2Second)\n\t\t\t\t\t\t_this.auidoControl(false)\n\t\t\t\t\t\t_this.seek(_this.parseTime(_this.audioNow))\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}, 50)\n\t\t\t}\n\t\t},\n}\n\n\x3c!-- css --\x3e\n.process {\n    margin: 80rpx 0;\n\n    &__time {\n        opacity: .3;\n        font-size: 24rpx;\n    }\n\n        &__line {\n        width: 500rpx;\n\n        &__badge {\n            position: relative;\n            top: 2rpx;\n            width: 30rpx;\n            height: 30rpx;\n            border-radius: 50%;\n            background-color: #fff;\n\n            &::after {\n                content: \'\';\n                width: 12rpx;\n                height: 12rpx;\n                border-radius: 50%;\n                background-color: #666;\n                position: absolute;\n                left: 50%;\n                top: 50%;\n                transform: translate(-50%, -50%);\n            }\n        }\n\n    }\n\n}')])])]),e("h2",{attrs:{id:"总结"}},[t._v("总结")]),t._v(" "),e("p",[t._v("想到解决办法后，在实施过程中并没有什么坑点，所以终归是个经验问题。")]),t._v(" "),e("p",[t._v("在处理进度条时，本来是自己尝试写一个的，但实现后发现拖拉过程并不流畅，想来应该是逻辑层和视图层的通信频率没有处理好，等有时间填坑。")])])}),[],!1,null,null,null);"function"==typeof s&&s(a);n.default=a.exports}}]);